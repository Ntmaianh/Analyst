@using AutoMapper
@using FPLSP_Analyst.Application.DataTransferObjects.GroupConfig
@using FPLSP_Analyst.Application.DataTransferObjects.GroupConfig.Request
@using FPLSP_Analyst.Application.Interfaces.Repositories.ReadOnly
@using FPLSP_Analyst.Application.Interfaces.Repositories.ReadWrite
@using FPLSP_Analyst.Application.Interfaces.Services
@using FPLSP_Analyst.Application.ValueObjects.Pagination
@using FPLSP_Analyst.Infrastructure.ViewModels.GroupConfig
@inject ISnackbar snackBar
@inject IWebHostEnvironment _env

@if (_groupConfigCreateRequest == null)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else
{
    <MudDialog>
        <DialogContent>
            <MudGrid>
                <MudItem xs="12">
                    <MudTextField @bind-Value="@_groupConfigCreateRequest.Code" T="string" Label="Tên nhóm chỉ số"></MudTextField>
                </MudItem>
            @*     <MudItem xs="6" md="12">
                    <MudSelect T="int" Label="Bảng" Value="@selectedTable" ValueChanged="OnSelectedTable">
                            <MudSelectItem T="int" Value="@(0)">Chuyên ngành</MudSelectItem>
                            <MudSelectItem T="int" Value="@(1)">Giảng viên</MudSelectItem>
                            <MudSelectItem T="int" Value="@(2)">Môn học</MudSelectItem>
                            <MudSelectItem T="int" Value="@(3)">Lớp học</MudSelectItem>
                    </MudSelect>
                </MudItem>
                <MudItem xs="6" md="12">
                    <MudSelect T="int" Label="Chỉ số" Value="@selectedIndicator" ValueChanged="OnSelectedIndicator">
                            <MudSelectItem T="int" Value="@(0)">% Qua môn</MudSelectItem>
                        <MudSelectItem T="int" Value="@(1)">% Trượt</MudSelectItem>
                        <MudSelectItem T="int" Value="@(2)">% Cấm thi</MudSelectItem>
                    </MudSelect>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField @bind-Value="@predication" HelperText="value > 0 && value < 10" T="string" Label="Điều kiện yêu cầu giải trình"></MudTextField>
                </MudItem> *@
            </MudGrid>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">Hủy</MudButton>
            <MudButton Color="Color.Primary" OnClick="CreateClicked">Thêm mới</MudButton>
        </DialogActions>
    </MudDialog>
}
@code {
    [CascadingParameter] MudDialogInstance _mudDialog { get; set; } = null!;

    [Inject] private IDialogService _dialogService { get; set; } = null!;
    [Inject] private IGroupConfigReadOnlyRepository _groupConfigReadOnlyRepository { get; set; }
    [Inject] private IGroupConfigReadWriteRepository _groupConfigReadWriteRepository { get; set; }

    [Inject] private ILocalizationService _localizationService { get; set; }
    [Inject] private IMapper _mapper { get; set; }

    GroupConfigCreateRequest _groupConfigCreateRequest { get; set; } = new();
    GroupConfigCreateViewModel _groupConfigCreateViewModel { get; set; }

    ViewGroupConfigWithPaginationRequest _paginationGroupConfigRequest = new();
    private PaginationResponse<GroupConfigDto>? _paginationGroupConfigResponse { get; set; }
    private List<string>? _listIndicator { get; set; }

    int selectedTable;
    int selectedIndicator;
    string predication;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    async Task LoadData()
    {

    }

    async Task OnSelectedTable(int tableName)
    {
        selectedTable = tableName;
    }

    async Task OnSelectedIndicator(int indicator)
    {
        selectedIndicator = indicator;
    }

    async Task CheckIndicatorConfig()
    {
        _groupConfigCreateRequest.ListConfigs = new();
        _groupConfigCreateRequest.ListConfigs.Add("","");
    }

    private async Task CreateClicked()
    {
        bool? result = await _dialogService.ShowMessageBox(
            "Xác nhận",
            "Bạn có chắc muốn thêm mới nhóm chỉ số này?",
            yesText: "Xác nhận", cancelText: "Hủy");
        

        if (result == true)
        {
            _groupConfigCreateViewModel = new(_groupConfigReadOnlyRepository, _groupConfigReadWriteRepository, _localizationService, _mapper);

            await _groupConfigCreateViewModel.HandleAsync(_groupConfigCreateRequest, default);

            if (_groupConfigCreateViewModel.Success)
            {
                snackBar.Add("Thêm mới nhóm chỉ số thành công!", Severity.Success);
            }
            else
            {
                snackBar.Add("Thêm mới nhóm chỉ số thất bại!", Severity.Error);
            }
        }

        await Task.Delay(1500);
        _mudDialog.Close(DialogResult.Ok(true));

        StateHasChanged();
    }

    void Cancel() => _mudDialog.Cancel();
}