@using FPLSP_Analyst.Application.Interfaces.Repositories.ReadOnly
@using FPLSP_Analyst.BlazorServer.Extensions;
@inherits LayoutComponentBase

@inject ICurrentUser _currentUser
@inject NavigationManager _navigationManager
@inject IJSRuntime JSRuntime
@inject IDialogService _dialogService;
@inject IHttpContextAccessor _httpContextAccessor
@inject IConfiguration _configuration

<MudThemeProvider Theme="_customTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Style="background-image: linear-gradient( 135deg, #FFB74D 10%, #FF9800 100%)" Elevation="0">
        <MudNavMenu>
            <MudNavLink Href="@(RouteManager.Home.AdminHome)" Match="NavLinkMatch.All"><MudText Style="color:#fff" Typo="Typo.h6">FPLSP Analyst</MudText></MudNavLink>
        </MudNavMenu>

        <AppMenu/>

        <MudSpacer />
       
@*         <MudMenu FullWidth="true" ActivationEvent="@MouseEvent.MouseOver" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.BottomCenter">
            <ActivatorContent>
                <MudButton Style="color:#fff;" Class="px-8">
                    <MudAvatar>@(roles.FirstOrDefault() == null ? "A" : roles.FirstOrDefault()!.First())</MudAvatar>
                    <span class="px-2">@_currentUser.Email</span>
                </MudButton>
            </ActivatorContent>
            <ChildContent>
                <MudMenuItem Class="ma-0 pa-0 aligns-left"><MudNavLink Href="@RouteManager.Profile.UserProfile">Chỉ số cá nhân</MudNavLink></MudMenuItem>
                <MudMenuItem Class="ma-0 pa-0 aligns-left"><MudNavLink OnClick="HrefProfile">Hồ sơ cá nhân</MudNavLink></MudMenuItem>
                <MudMenuItem Class="ma-0 pa-0 aligns-left"><MudNavLink OnClick="HrefResetPass">Đổi mật khẩu</MudNavLink></MudMenuItem>
                <MudMenuItem Class="ma-0 pa-0 aligns-left"><MudNavLink OnClick="HrefRequest">Gửi yêu cầu truy cập</MudNavLink></MudMenuItem>
                <MudMenuItem Class="ma-0 pa-0 aligns-left"><MudNavLink OnClick="Logout">Đăng xuất</MudNavLink></MudMenuItem>
            </ChildContent>
        </MudMenu>
 *@    </MudAppBar>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-2 pt-8">
            @Body
        </MudContainer>
    </MudMainContent>
    <MudScrollToTop>
        <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.KeyboardArrowUp" />
    </MudScrollToTop>
</MudLayout>

@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}

@code {
    private List<string> roles = new();
    private string isShowProfile = "";
    private string token = "";
    private string url = "";
    private void HrefProfile()
    {
        _navigationManager.NavigateTo(url + "/Account/UpdateProfile?token=" + token, true);
    }
    private void HrefResetPass()
    {
        _navigationManager.NavigateTo(url + "/Account/ResetPassword?token=" + token, true);
    }
    private void HrefRequest()
    {
        _navigationManager.NavigateTo(url + "/Request/Index?token=" + token, true);
    }
    private async Task Logout()
    {
        var confirm = await Confirm();
        if (confirm == true)
        {
            _navigationManager.NavigateTo("Account/Logout", true);
        }
    }

    private async Task<bool?> Confirm()
    {
        var confirm = await _dialogService.ShowMessageBox(
            "Thông báo",
                    "Bạn chắc chắn muốn đăng xuất?",
           yesText: "Đăng xuất",
                    cancelText: "Hủy", noText: null, options: new DialogOptions { Position = DialogPosition.Center, MaxWidth = MaxWidth.ExtraSmall, FullWidth = true });
        StateHasChanged();
        return confirm;
    }
    // protected override async Task OnInitializedAsync()
    // {
    //     url = _configuration["IdentityURLLOGIN"] ?? "";
    //     // lấy token từ cookie
    //     token = _httpContextAccessor.HttpContext?.Request.Cookies["token"] ?? "";
    //     roles = _currentUser.RoleCodes ?? new List<string>();
    // }
    private void Profile()
    {
        if (string.IsNullOrEmpty(isShowProfile))
        {
            isShowProfile = "show";
        }
        else
        {
            isShowProfile = "";
        }
    }
 
    private MudTheme _customTheme = new()
        {
            Palette = new Palette()
            {
                Primary = CustomPalette.MainColor,
            }
        };
}